#!/usr/bin/python

import sys
import os
import math


def ave_stderr(x):
        ave=sum(x)/len(x)

        ssq = 0.0
        for y in x:
                ssq += (y-ave)*(y-ave)

        var = ssq / (len(x)-1)

        stdev = math.sqrt(var)

        stderr = stdev /math.sqrt(len(x))

        return (ave,stderr)

bcfname=sys.argv[1]
seqfname=sys.argv[2]

#matching each sequence to the barcode
bcfh=open(bcfname)
for barcode in bcfh:
        barcode=barcode.strip()

        simplefname= "%s.%s"%(seqfname,barcode)
        fastafname = simplefname + ".fasta"
        mafftfname = fastafname + ".mafft"
        stockfname = mafftfname + ".stock"
        qtfname    = mafftfname + ".distances"

        simplefh=open(simplefname,"w")
        fastafh=open(fastafname, "w")
        sequence=open(seqfname)
        for line in sequence:
                linearray=line.strip("\t").split()
                seq_id=linearray[0]
                seq=linearray[1]
                potential_barcode=seq[:len(barcode)]
                if potential_barcode==barcode:
                        outseq=seq[len(barcode):]
                        simplefh.write("%s\t%s\n" % (seq_id, outseq))
                        fastafh.write(">%s\n%s\n" % (seq_id, outseq))

        simplefh.close()
        fastafh.close()

        cmd = "mafft %s > %s" %(fastafname,mafftfname)
        os.system(cmd)

        cmd = "fasta_to_stockholm %s > %s" % (mafftfname, stockfname)
        os.system(cmd)

        cmd = "quicktree -out m %s > %s" % (stockfname, qtfname)
        os.system(cmd)

        qtfh = open(qtfname)
        user_numbers = []
        qtfh.next()
        i = 2
        for q in qtfh:

                linearr=q.split()
                for s in linearr[i:]:
                        user_numbers.append(float(s))
                i += 1

        (a,s)=ave_stderr(user_numbers)
        print "%s %f +/- %f" % (barcode,a,s)
        qtfh.close()
        sequence.close()
bcfh.close()
